-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module LondoGQL.Object.DeeplyResolvedDashboard exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import LondoGQL.InputObject
import LondoGQL.Interface
import LondoGQL.Object
import LondoGQL.Scalar
import LondoGQL.ScalarCodecs
import LondoGQL.Union


dashboard :
    SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo LondoGQL.Object.DeeplyResolvedDashboard
dashboard object____ =
    Object.selectionForCompositeField "dashboard" [] object____ Basics.identity


resolvedProjects :
    SelectionSet decodesTo LondoGQL.Object.ResolvedProject
    -> SelectionSet (List decodesTo) LondoGQL.Object.DeeplyResolvedDashboard
resolvedProjects object____ =
    Object.selectionForCompositeField "resolvedProjects" [] object____ (Basics.identity >> Decode.list)
