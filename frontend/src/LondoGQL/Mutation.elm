-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module LondoGQL.Mutation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import LondoGQL.InputObject
import LondoGQL.Interface
import LondoGQL.Object
import LondoGQL.Scalar
import LondoGQL.ScalarCodecs
import LondoGQL.Union


type alias LoginRequiredArguments =
    { nickname : String
    , password : String
    , isValidityUnrestricted : Bool
    }


login :
    LoginRequiredArguments
    -> SelectionSet String RootMutation
login requiredArgs____ =
    Object.selectionForField "String" "login" [ Argument.required "nickname" requiredArgs____.nickname Encode.string, Argument.required "password" requiredArgs____.password Encode.string, Argument.required "isValidityUnrestricted" requiredArgs____.isValidityUnrestricted Encode.bool ] Decode.string


type alias RequestCreateRequiredArguments =
    { email : String }


requestCreate :
    RequestCreateRequiredArguments
    -> SelectionSet LondoGQL.ScalarCodecs.Unit RootMutation
requestCreate requiredArgs____ =
    Object.selectionForField "ScalarCodecs.Unit" "requestCreate" [ Argument.required "email" requiredArgs____.email Encode.string ] (LondoGQL.ScalarCodecs.codecs |> LondoGQL.Scalar.unwrapCodecs |> .codecUnit |> .decoder)


type alias CreateUserRequiredArguments =
    { userCreation : LondoGQL.InputObject.UserCreation }


createUser :
    CreateUserRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.User
    -> SelectionSet decodesTo RootMutation
createUser requiredArgs____ object____ =
    Object.selectionForCompositeField "createUser" [ Argument.required "userCreation" requiredArgs____.userCreation LondoGQL.InputObject.encodeUserCreation ] object____ Basics.identity


type alias CreateProjectRequiredArguments =
    { projectCreation : LondoGQL.InputObject.ProjectCreation }


createProject :
    CreateProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Project
    -> SelectionSet decodesTo RootMutation
createProject requiredArgs____ object____ =
    Object.selectionForCompositeField "createProject" [ Argument.required "projectCreation" requiredArgs____.projectCreation LondoGQL.InputObject.encodeProjectCreation ] object____ Basics.identity


type alias AllowReadUsersProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


allowReadUsersProject :
    AllowReadUsersProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
allowReadUsersProject requiredArgs____ object____ =
    Object.selectionForCompositeField "allowReadUsersProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias AllowWriteUsersProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


allowWriteUsersProject :
    AllowWriteUsersProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
allowWriteUsersProject requiredArgs____ object____ =
    Object.selectionForCompositeField "allowWriteUsersProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias BlockReadUsersProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


blockReadUsersProject :
    BlockReadUsersProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
blockReadUsersProject requiredArgs____ object____ =
    Object.selectionForCompositeField "blockReadUsersProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias BlockWriteUsersProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


blockWriteUsersProject :
    BlockWriteUsersProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
blockWriteUsersProject requiredArgs____ object____ =
    Object.selectionForCompositeField "blockWriteUsersProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias DeleteProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput }


deleteProject :
    DeleteProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Project
    -> SelectionSet decodesTo RootMutation
deleteProject requiredArgs____ object____ =
    Object.selectionForCompositeField "deleteProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput ] object____ Basics.identity


type alias AddPlainTaskRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , plainCreation : LondoGQL.InputObject.PlainCreation
    }


addPlainTask :
    AddPlainTaskRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Plain
    -> SelectionSet decodesTo RootMutation
addPlainTask requiredArgs____ object____ =
    Object.selectionForCompositeField "addPlainTask" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "plainCreation" requiredArgs____.plainCreation LondoGQL.InputObject.encodePlainCreation ] object____ Basics.identity


type alias AddProjectReferenceTaskRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , projectReferenceCreation : LondoGQL.InputObject.ProjectReferenceCreation
    }


addProjectReferenceTask :
    AddProjectReferenceTaskRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.ProjectReference
    -> SelectionSet decodesTo RootMutation
addProjectReferenceTask requiredArgs____ object____ =
    Object.selectionForCompositeField "addProjectReferenceTask" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "projectReferenceCreation" requiredArgs____.projectReferenceCreation LondoGQL.InputObject.encodeProjectReferenceCreation ] object____ Basics.identity


type alias RemovePlainTaskRequiredArguments =
    { taskKey : LondoGQL.InputObject.TaskKeyInput }


removePlainTask :
    RemovePlainTaskRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Plain
    -> SelectionSet decodesTo RootMutation
removePlainTask requiredArgs____ object____ =
    Object.selectionForCompositeField "removePlainTask" [ Argument.required "taskKey" requiredArgs____.taskKey LondoGQL.InputObject.encodeTaskKeyInput ] object____ Basics.identity


type alias RemoveProjectReferenceTaskRequiredArguments =
    { taskKey : LondoGQL.InputObject.TaskKeyInput }


removeProjectReferenceTask :
    RemoveProjectReferenceTaskRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.ProjectReference
    -> SelectionSet decodesTo RootMutation
removeProjectReferenceTask requiredArgs____ object____ =
    Object.selectionForCompositeField "removeProjectReferenceTask" [ Argument.required "taskKey" requiredArgs____.taskKey LondoGQL.InputObject.encodeTaskKeyInput ] object____ Basics.identity


type alias UpdateProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput
    , projectUpdate : LondoGQL.InputObject.ProjectUpdate
    }


updateProject :
    UpdateProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Project
    -> SelectionSet decodesTo RootMutation
updateProject requiredArgs____ object____ =
    Object.selectionForCompositeField "updateProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "projectUpdate" requiredArgs____.projectUpdate LondoGQL.InputObject.encodeProjectUpdate ] object____ Basics.identity


type alias UpdatePlainTaskRequiredArguments =
    { taskKey : LondoGQL.InputObject.TaskKeyInput
    , plainUpdate : LondoGQL.InputObject.PlainUpdate
    }


updatePlainTask :
    UpdatePlainTaskRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Plain
    -> SelectionSet decodesTo RootMutation
updatePlainTask requiredArgs____ object____ =
    Object.selectionForCompositeField "updatePlainTask" [ Argument.required "taskKey" requiredArgs____.taskKey LondoGQL.InputObject.encodeTaskKeyInput, Argument.required "plainUpdate" requiredArgs____.plainUpdate LondoGQL.InputObject.encodePlainUpdate ] object____ Basics.identity


type alias UpdateProjectReferenceTaskRequiredArguments =
    { taskKey : LondoGQL.InputObject.TaskKeyInput
    , projectReferenceUpdate : LondoGQL.InputObject.ProjectReferenceUpdate
    }


updateProjectReferenceTask :
    UpdateProjectReferenceTaskRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.ProjectReference
    -> SelectionSet decodesTo RootMutation
updateProjectReferenceTask requiredArgs____ object____ =
    Object.selectionForCompositeField "updateProjectReferenceTask" [ Argument.required "taskKey" requiredArgs____.taskKey LondoGQL.InputObject.encodeTaskKeyInput, Argument.required "projectReferenceUpdate" requiredArgs____.projectReferenceUpdate LondoGQL.InputObject.encodeProjectReferenceUpdate ] object____ Basics.identity


type alias CreateDashboardRequiredArguments =
    { dashboardCreation : LondoGQL.InputObject.DashboardCreation }


createDashboard :
    CreateDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootMutation
createDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "createDashboard" [ Argument.required "dashboardCreation" requiredArgs____.dashboardCreation LondoGQL.InputObject.encodeDashboardCreation ] object____ Basics.identity


type alias AllowReadUsersDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


allowReadUsersDashboard :
    AllowReadUsersDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
allowReadUsersDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "allowReadUsersDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias AllowWriteUsersDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


allowWriteUsersDashboard :
    AllowWriteUsersDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
allowWriteUsersDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "allowWriteUsersDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias BlockReadUsersDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


blockReadUsersDashboard :
    BlockReadUsersDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
blockReadUsersDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "blockReadUsersDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias BlockWriteUsersDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , userIds : LondoGQL.InputObject.NonEmptyListOfUserIdInput
    }


blockWriteUsersDashboard :
    BlockWriteUsersDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Accessors
    -> SelectionSet decodesTo RootMutation
blockWriteUsersDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "blockWriteUsersDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "userIds" requiredArgs____.userIds LondoGQL.InputObject.encodeNonEmptyListOfUserIdInput ] object____ Basics.identity


type alias UpdateDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , dashboardUpdate : LondoGQL.InputObject.DashboardUpdate
    }


updateDashboard :
    UpdateDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootMutation
updateDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "updateDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "dashboardUpdate" requiredArgs____.dashboardUpdate LondoGQL.InputObject.encodeDashboardUpdate ] object____ Basics.identity


type alias DeleteDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput }


deleteDashboard :
    DeleteDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootMutation
deleteDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "deleteDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput ] object____ Basics.identity


type alias AddProjectToDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , projectId : LondoGQL.InputObject.ProjectIdInput
    , weight : LondoGQL.ScalarCodecs.Natural
    }


addProjectToDashboard :
    AddProjectToDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootMutation
addProjectToDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "addProjectToDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput, Argument.required "weight" requiredArgs____.weight (LondoGQL.ScalarCodecs.codecs |> LondoGQL.Scalar.unwrapEncoder .codecNatural) ] object____ Basics.identity


type alias AdjustWeightsOnDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , projectWeightsOnDashboard : List LondoGQL.InputObject.ProjectWeightOnDashboardInput
    }


adjustWeightsOnDashboard :
    AdjustWeightsOnDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootMutation
adjustWeightsOnDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "adjustWeightsOnDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "projectWeightsOnDashboard" requiredArgs____.projectWeightsOnDashboard (LondoGQL.InputObject.encodeProjectWeightOnDashboardInput |> Encode.list) ] object____ Basics.identity


type alias RemoveProjectFromDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput
    , projectId : LondoGQL.InputObject.ProjectIdInput
    }


removeProjectFromDashboard :
    RemoveProjectFromDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootMutation
removeProjectFromDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "removeProjectFromDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput, Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput ] object____ Basics.identity
