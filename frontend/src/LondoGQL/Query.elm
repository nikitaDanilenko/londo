-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module LondoGQL.Query exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import LondoGQL.InputObject
import LondoGQL.Interface
import LondoGQL.Object
import LondoGQL.Scalar
import LondoGQL.ScalarCodecs
import LondoGQL.Union


type alias FetchUserRequiredArguments =
    { userId : LondoGQL.InputObject.UserIdInput }


fetchUser :
    FetchUserRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.User
    -> SelectionSet decodesTo RootQuery
fetchUser requiredArgs____ object____ =
    Object.selectionForCompositeField "fetchUser" [ Argument.required "userId" requiredArgs____.userId LondoGQL.InputObject.encodeUserIdInput ] object____ Basics.identity


type alias FetchProjectRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput }


fetchProject :
    FetchProjectRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Project
    -> SelectionSet decodesTo RootQuery
fetchProject requiredArgs____ object____ =
    Object.selectionForCompositeField "fetchProject" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput ] object____ Basics.identity


type alias ProjectProgressRequiredArguments =
    { projectId : LondoGQL.InputObject.ProjectIdInput }


projectProgress :
    ProjectProgressRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Progress
    -> SelectionSet (Maybe decodesTo) RootQuery
projectProgress requiredArgs____ object____ =
    Object.selectionForCompositeField "projectProgress" [ Argument.required "projectId" requiredArgs____.projectId LondoGQL.InputObject.encodeProjectIdInput ] object____ (Basics.identity >> Decode.nullable)


type alias FetchDashboardRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput }


fetchDashboard :
    FetchDashboardRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Dashboard
    -> SelectionSet decodesTo RootQuery
fetchDashboard requiredArgs____ object____ =
    Object.selectionForCompositeField "fetchDashboard" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput ] object____ Basics.identity


type alias DashboardProgressRequiredArguments =
    { dashboardId : LondoGQL.InputObject.DashboardIdInput }


dashboardProgress :
    DashboardProgressRequiredArguments
    -> SelectionSet decodesTo LondoGQL.Object.Progress
    -> SelectionSet (Maybe decodesTo) RootQuery
dashboardProgress requiredArgs____ object____ =
    Object.selectionForCompositeField "dashboardProgress" [ Argument.required "dashboardId" requiredArgs____.dashboardId LondoGQL.InputObject.encodeDashboardIdInput ] object____ (Basics.identity >> Decode.nullable)
