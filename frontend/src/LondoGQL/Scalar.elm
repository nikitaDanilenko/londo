-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module LondoGQL.Scalar exposing (BigInt(..), Codecs, Unit(..), Uuid(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type BigInt
    = BigInt String


type Unit
    = Unit String


type Uuid
    = Uuid String


defineCodecs :
    { codecBigInt : Codec valueBigInt
    , codecUnit : Codec valueUnit
    , codecUuid : Codec valueUuid
    }
    -> Codecs valueBigInt valueUnit valueUuid
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueBigInt valueUnit valueUuid
    ->
        { codecBigInt : Codec valueBigInt
        , codecUnit : Codec valueUnit
        , codecUuid : Codec valueUuid
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueBigInt valueUnit valueUuid -> Codec getterValue)
    -> Codecs valueBigInt valueUnit valueUuid
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueBigInt valueUnit valueUuid
    = Codecs (RawCodecs valueBigInt valueUnit valueUuid)


type alias RawCodecs valueBigInt valueUnit valueUuid =
    { codecBigInt : Codec valueBigInt
    , codecUnit : Codec valueUnit
    , codecUuid : Codec valueUuid
    }


defaultCodecs : RawCodecs BigInt Unit Uuid
defaultCodecs =
    { codecBigInt =
        { encoder = \(BigInt raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map BigInt
        }
    , codecUnit =
        { encoder = \(Unit raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Unit
        }
    , codecUuid =
        { encoder = \(Uuid raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Uuid
        }
    }
